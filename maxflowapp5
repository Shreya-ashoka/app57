Input:

A directed graph representing the network.
Capacities (costs) assigned to each edge in the graph.
Source vertex (the starting point of flow).
Sink vertex (the destination of flow).
Output:

Maximum flow from the source to the sink.
Algorithm:

Initialize the flow on all edges to zero.
While there exists an augmenting path from the source to the sink:
a. Use a graph traversal algorithm (e.g., BFS) to find an augmenting path in the residual graph. The residual graph is initially the same as the original graph but with reduced capacities on edges as flow is added.
b. Determine the bottleneck capacity (minimum capacity) of the augmenting path.
c. Update the flow on each edge in the augmenting path:
Decrease the capacity of forward edges by the bottleneck capacity.
Increase the capacity of backward edges (if they exist) by the bottleneck capacity.
Return the maximum flow, which is the sum of flows leaving the source.
